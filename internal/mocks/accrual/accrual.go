// Code generated by MockGen. DO NOT EDIT.
// Source: internal/accrual/accrual.go

// Package mock_accrual is a generated GoMock package.
package mock_accrual

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	accrual "github.com/renatus-cartesius/gophermart/internal/accrual"
)

// MockAccrualler is a mock of Accrualler interface.
type MockAccrualler struct {
	ctrl     *gomock.Controller
	recorder *MockAccruallerMockRecorder
}

// MockAccruallerMockRecorder is the mock recorder for MockAccrualler.
type MockAccruallerMockRecorder struct {
	mock *MockAccrualler
}

// NewMockAccrualler creates a new mock instance.
func NewMockAccrualler(ctrl *gomock.Controller) *MockAccrualler {
	mock := &MockAccrualler{ctrl: ctrl}
	mock.recorder = &MockAccruallerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccrualler) EXPECT() *MockAccruallerMockRecorder {
	return m.recorder
}

// GetOrder mocks base method.
func (m *MockAccrualler) GetOrder(arg0 int) (*accrual.OrderInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrder", arg0)
	ret0, _ := ret[0].(*accrual.OrderInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrder indicates an expected call of GetOrder.
func (mr *MockAccruallerMockRecorder) GetOrder(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrder", reflect.TypeOf((*MockAccrualler)(nil).GetOrder), arg0)
}
